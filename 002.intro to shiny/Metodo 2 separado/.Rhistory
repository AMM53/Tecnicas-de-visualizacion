)
)
,mainPanel(
plotOutput("ggplot")
)
)
)
)
library(shiny)
library(ggplot2)
server <- shinyServer(
function(input, output) {}
)
shinyApp(ui, server)
library(shiny)
ui <- shinyUI(
fluidPage(
titlePanel("mtcars shiny"),
sidebarLayout(
sidebarPanel(
selectInput(
"xaxis",
label = "Elige la variable X",
choices = list(
mtcars$mpg = 1,
"2" = 2,
"3" = 3,
"4" = 4)
),
selectInput(
"yaxis",
label = "Elige la variable Y",
choices = list(
"1" = 1,
"2" = 2,
"3" = 3,
"4" = 4)
)
)
,mainPanel(
plotOutput("ggplot")
)
)
)
)
library(shiny)
ui <- shinyUI(
fluidPage(
titlePanel("mtcars shiny"),
sidebarLayout(
sidebarPanel(
selectInput(
"xaxis",
label = "Elige la variable X",
choices = list(
mtcars$mpg = 1,
"2" = 2,
"3" = 3,
"4" = 4)
),
selectInput(
"yaxis",
label = "Elige la variable Y",
choices = list(
"1" = 1,
"2" = 2,
"3" = 3,
"4" = 4)
)
)
,mainPanel(
plotOutput("ggplot")
)
)
)
)
library(shiny)
ui <- shinyUI(
fluidPage(
titlePanel("mtcars shiny"),
sidebarLayout(
sidebarPanel(
selectInput(
"xaxis",
label = "Elige la variable X",
choices = list(
"1" = 1,
"2" = 2,
"3" = 3,
"4" = 4)
),
selectInput(
"yaxis",
label = "Elige la variable Y",
choices = list(
"1" = 1,
"2" = 2,
"3" = 3,
"4" = 4)
)
)
,mainPanel(
plotOutput("ggplot")
)
)
)
)
cars
?mpg
library(shiny)
ui <- shinyUI(
fluidPage(
titlePanel("mtcars shiny"),
sidebarLayout(
sidebarPanel(
selectInput(
"varx",
label = "Elige la variable X",
choices = list(
"Engine Displacement in litres" = "displ",
"Number of cylinders" = "cyl",
"City miles per gallon" = "cty",
"Highway miles per gallon" = "hwy")
),
selectInput(
"vary",
label = "Elige la variable Y",
choices = list(
"Engine Displacement in litres" = "displ",
"Number of cylinders" = "cyl",
"City miles per gallon" = "cty",
"Highway miles per gallon" = "hwy")
)
)
,mainPanel(
plotOutput("ggplot")
)
)
)
)
library(shiny)
library(ggplot2)
server <- shinyServer(
function(input, output) {}
)
shinyApp(ui, server)
library(shiny)
ui <- shinyUI(
fluidPage(
titlePanel("mtcars shiny"),
sidebarLayout(
sidebarPanel(
selectInput(
"varx",
label = "Elige la variable X",
choices = list(
"Engine Displacement in litres" = "displ",
"Number of cylinders" = "cyl",
"City miles per gallon" = "cty",
"Highway miles per gallon" = "hwy")
),
selectInput(
"vary",
label = "Elige la variable Y",
choices = list(
"Engine Displacement in litres" = "displ",
"Number of cylinders" = "cyl",
"City miles per gallon" = "cty",
"Highway miles per gallon" = "hwy")
)
)
,mainPanel(
plotOutput("ggplot")
)
)
)
)
library(shiny)
library(ggplot2)
server <- shinyServer(
function(input, output) {}
)
shinyApp(ui, server)
runApp('C:/Master/OneDrive - Colegio Universitario de Estudios Financieros (CUNEF)/Máster/Técnicas de visualización/002.intro shiny/Metodo 2 separado')
runApp('C:/Master/OneDrive - Colegio Universitario de Estudios Financieros (CUNEF)/Máster/Técnicas de visualización/002.intro shiny/Metodo 2 separado')
runApp('C:/Master/OneDrive - Colegio Universitario de Estudios Financieros (CUNEF)/Máster/Técnicas de visualización/002.intro shiny/Metodo 2 separado')
runApp('C:/Master/OneDrive - Colegio Universitario de Estudios Financieros (CUNEF)/Máster/Técnicas de visualización/002.intro shiny/Metodo 2 separado')
library(shiny)
library(ggplot2)
shinyServer(
function(input, output) {
output$ggplot <- renderPlot({
ggplot(mpg, aes(x=input$varx, y=input$vary)) +
geom_point()
})
}
)
shinyApp(ui, server)
# llamamos al paquete
library(shiny)
# creamos dos variables
ui <-
fluidPage(
titlePanel("Old Faithful Geyser Data"),
sidebarLayout(
sidebarPanel(
sliderInput(inputId = "nbins",
label = "Slider Label",
min = 1,
max = 50,
value = 34)),
mainPanel(
plotOutput("hist")
)))
#
server <- function (input, output) {
output$hist <- renderPlot({
hist(faithful$waiting,
breaks = input$nbins)
})
}
shinyApp(ui, server)
library(shiny)
shinyUI(
fluidPage(
titlePanel("shiny 2"),
sidebarLayout(
sidebarPanel(
selectInput(
"varx",
label = "Elige la variable X",
choices = list(
"Engine Displacement in litres" = "displ",
"Number of cylinders" = "cyl",
"City miles per gallon" = "cty",
"Highway miles per gallon" = "hwy")
),
selectInput(
"vary",
label = "Elige la variable Y",
choices = list(
"Engine Displacement in litres" = "displ",
"Number of cylinders" = "cyl",
"City miles per gallon" = "cty",
"Highway miles per gallon" = "hwy")
)
)
,mainPanel(
plotOutput("ggplot")
)
)
)
)
library(shiny)
library(ggplot2)
shinyServer(
function(input, output) {
output$ggplot <- renderPlot({
ggplot(mpg, aes(x=input$varx, y=input$vary)) +
geom_point()
})
}
)
shinyApp(ui, server)
library(shiny)
library(ggplot2)
shinyServer(
function(input, output) {
output$ggplot <- renderPlot({
ggplot(mpg, aes(x=input$varx, y=input$vary)) +
geom_point()
})
}
)
shinyApp(ui, server)
rm(list=ls())
library(shiny)
library(ggplot2)
shinyServer(
function(input, output) {
output$ggplot <- renderPlot({
ggplot(mpg, aes(x=input$varx, y=input$vary)) +
geom_point()
})
}
)
shinyApp(ui, server)
library(shiny)
shinyUI(
fluidPage(
titlePanel("shiny 2"),
sidebarLayout(
sidebarPanel(
selectInput(
"varx",
label = "Elige la variable X",
choices = list(
"Engine Displacement in litres" = "displ",
"Number of cylinders" = "cyl",
"City miles per gallon" = "cty",
"Highway miles per gallon" = "hwy")
),
selectInput(
"vary",
label = "Elige la variable Y",
choices = list(
"Engine Displacement in litres" = "displ",
"Number of cylinders" = "cyl",
"City miles per gallon" = "cty",
"Highway miles per gallon" = "hwy")
)
)
,mainPanel(
plotOutput("ggplot")
)
)
)
)
library(shiny)
library(ggplot2)
shinyServer(
function(input, output) {
output$ggplot <- renderPlot({
ggplot(mpg, aes(x=input$varx, y=input$vary)) +
geom_point()
})
}
)
shinyApp(ui, server)
runApp('C:/Master/OneDrive - Colegio Universitario de Estudios Financieros (CUNEF)/Máster/Técnicas de visualización/002.intro shiny/Metodo 2 separado')
runApp()
runApp()
library(shiny)
shinyUI(
fluidPage(
titlePanel("shiny 2"),
sidebarLayout(
sidebarPanel(
selectInput(
"varx",
label = "Elige la variable X",
choices = list(
"Engine Displacement in litres" = "displ",
"Number of cylinders" = "cyl",
"City miles per gallon" = "cty",
"Highway miles per gallon" = "hwy")
),
selectInput(
"vary",
label = "Elige la variable Y",
choices = list(
"Engine Displacement in litres" = "displ",
"Number of cylinders" = "cyl",
"City miles per gallon" = "cty",
"Highway miles per gallon" = "hwy")
)
)
,mainPanel(
plotOutput("ggplot")
)
)
)
)
library(shiny)
shinyUI(
fluidPage(
titlePanel("shiny 2"),
sidebarLayout(
sidebarPanel(
selectInput(
"varx",
label = "Elige la variable X",
choices = list(
"Engine Displacement in litres" = "displ",
"Number of cylinders" = "cyl",
"City miles per gallon" = "cty",
"Highway miles per gallon" = "hwy")
),
selectInput(
"vary",
label = "Elige la variable Y",
choices = list(
"Engine Displacement in litres" = "displ",
"Number of cylinders" = "cyl",
"City miles per gallon" = "cty",
"Highway miles per gallon" = "hwy")
)
)
,mainPanel(
plotOutput("ggplot")
)
)
)
)
runApp('C:/Master/OneDrive - Colegio Universitario de Estudios Financieros (CUNEF)/Máster/Técnicas de visualización/002.intro shiny/Metodo 2 separado')
shiny::runApp()
library(shiny)
shinyUI(
fluidPage(
titlePanel("shiny 2"),
sidebarLayout(
sidebarPanel(
selectInput(
"varx",
label = "Elige la variable X",
choices = list(
"Engine Displacement in litres" = "displ",
"Number of cylinders" = "cyl",
"City miles per gallon" = "cty",
"Highway miles per gallon" = "hwy")
),
selectInput(
"vary",
label = "Elige la variable Y",
choices = list(
"Engine Displacement in litres" = "displ",
"Number of cylinders" = "cyl",
"City miles per gallon" = "cty",
"Highway miles per gallon" = "hwy")
)
)
,mainPanel(
plotOutput("ggplot")
)
)
)
)
library(shiny)
shinyUI(
fluidPage(
titlePanel("shiny 2"),
sidebarLayout(
sidebarPanel(
selectInput(
"varx",
label = "Elige la variable X",
choices = list(
"Engine Displacement in litres" = "displ",
"Number of cylinders" = "cyl",
"City miles per gallon" = "cty",
"Highway miles per gallon" = "hwy")
),
selectInput(
"vary",
label = "Elige la variable Y",
choices = list(
"Engine Displacement in litres" = "displ",
"Number of cylinders" = "cyl",
"City miles per gallon" = "cty",
"Highway miles per gallon" = "hwy")
)
)
,mainPanel(
textOutput("subtitle"),
plotOutput("graph")
)
)
)
)
library(shiny)
library(ggplot2)
shinyServer(
function(input, output) {
output
# output$ggplot <- renderPlot({
#   ggplot(mpg, aes(x=input$varx, y=input$vary)) +
#     geom_point()
# })
}
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(ggplot2)
shinyServer(
function(input, output) {
output$subtitle <- renderText({
paste("Scatter plot of variables ",
input$varx,
" and ",
input$vary)
})
output$ggplot <- renderPlot({
ggplot(mpg, aes(x=input$varx, y=input$vary)) +
geom_point()
})
}
)
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(ggplot2)
shinyServer(
function(input, output) {
output$subtitle <- renderText({
paste("Scatter plot of variables ",
input$varx,
" and ",
input$vary)
})
output$graph <- renderPlot({
ggplot(mpg, aes_string(x=input$varx, y=input$vary)) +
geom_point()
})
}
)
